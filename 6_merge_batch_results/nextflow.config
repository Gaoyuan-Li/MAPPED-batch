// Nextflow configuration for merge batch results pipeline

// Set default parameters
params {
    // Input/output directories
    batch_dir = "${PWD}/batch_*"
    output_dir = "${PWD}/merged_results"
    metadata_dir = "${PWD}/metadata"
    
    // Help message
    help = false
}

// Process configuration
process {
    // Default error strategy
    errorStrategy = 'retry'
    maxRetries = 2
    
    // Resource allocation
    withName: MERGE_EXPRESSION_MATRICES {
        cpus = 4
        memory = '8 GB'
        time = '2h'
    }
    
    withName: MERGE_SAMPLESHEETS {
        cpus = 2
        memory = '4 GB'
        time = '1h'
    }
    
    withName: NORMALIZE_LOG_TPM {
        cpus = 2
        memory = '4 GB'
        time = '1h'
    }
    
    withName: COPY_METADATA {
        cpus = 1
        memory = '2 GB'
        time = '30m'
    }
}

// Execution profiles
profiles {
    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
    }
    
    conda {
        conda.enabled = true
    }
}

// Manifest
manifest {
    name = 'merge-batch-results'
    author = 'MAPPED-batch pipeline'
    description = 'Merge expression matrices and metadata from multiple batches'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version = '1.0.0'
}

// Capture exit codes
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Reports
def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
report {
    enabled = true
    file = "${params.output_dir}/pipeline_report_${trace_timestamp}.html"
}

timeline {
    enabled = true
    file = "${params.output_dir}/timeline_${trace_timestamp}.html"
}

dag {
    enabled = true
    file = "${params.output_dir}/dag_${trace_timestamp}.svg"
}